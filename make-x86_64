#!/bin/sh
#==========================================================

# config path
make_path="$(pwd)"
openwrt_dir="openwrt"
imagebuilder_path="${make_path}/${openwrt_dir}"

# targets
releases="21.02.5"
username="v1nch3r"

# config repo
imagebuilder_repo="https://downloads.openwrt.org/releases/${releases}/targets/x86/64/openwrt-imagebuilder-${releases}-x86-64.Linux-x86_64.tar.xz"
clash="https://github.com/Dreamacro/clash/releases/download/v1.14.0/clash-linux-amd64-v1.14.0.gz"
clash_tun="https://release.dreamacro.workers.dev/2023.03.18/clash-linux-amd64-2023.03.18.gz"
clash_meta="https://github.com/djoeni/Clash.Meta/releases/download/Prerelease-WSS/Clash.Meta-linux-amd64-compatible-36e3318.gz"
speedtest_repo="https://install.speedtest.net/app/cli/ookla-speedtest-1.2.0-linux-x86_64.tgz"
kmod_inet_diag="https://github.com/v1nch3r/kmod-inet-diag/releases/download/v21.02.5-x86_64/kmod-inet-diag_5.4.215-1_x86_64.ipk"
luci_app_passwall2="https://github.com/v1nch3r/passwall-binaries/branches/master/v21.02.5/x86_64/"
luci_theme_argon="https://github.com/v1nch3r/openwrt-packages/releases/download/generic/luci-theme-argon_2.2.9.5_all.ipk"
luci_app_argon_config="https://github.com/v1nch3r/openwrt-packages/releases/download/generic/luci-app-argon-config_0.9_all.ipk"
luci_app_openclash="https://github.com/vernesong/OpenClash/releases/download/v0.45.103-beta/luci-app-openclash_0.45.103-beta_all.ipk"
luci_app_netmon="https://github.com/v1nch3r/openwrt-packages/releases/download/generic/luci-app-netmon_1.2_all.ipk"
luci_app_shutdown="https://github.com/helmiau/helmiwrt-packages/releases/download/ipk/luci-app-shutdown_1.3_all.ipk"
luci_app_tinyfm="https://github.com/v1nch3r/openwrt-packages/releases/download/generic/luci-app-tinyfm_1.2_all.ipk"
luci_app_base64="https://github.com/v1nch3r/openwrt-packages/releases/download/generic/luci-app-base64_1.2_all.ipk"
luci_app_adguardhome="https://github.com/rufengsuixing/luci-app-adguardhome/releases/download/1.8-11/luci-app-adguardhome_1.8-11_all.ipk"
luci_app_zerotier="https://github.com/rufengsuixing/luci-app-zerotier/releases/download/1.0-16/luci-app-zerotier_1.0-16_all.ipk"
# luci_app_3ginfo_lite="https://github.com/${username}/luci-app-3ginfo-lite/releases/download/21.02.5-armvirt64/luci-app-3ginfo-lite_1.0.39-20230321_all.ipk"
sms_tool="https://github.com/v1nch3r/modem-support/releases/download/21.02.5-x86_64/sms-tool_2022-03-21-f07699ab-1_x86_64.ipk"
luci_app_modeminfo="https://github.com/v1nch3r/modem-support/releases/download/21.02.5-generic/luci-app-modeminfo_0.3.1-0_all.ipk"
modeminfo="https://github.com/v1nch3r/modem-support/releases/download/21.02.5-generic/modeminfo_0.3.2-2_all.ipk"
luci_app_atinout_mod="https://github.com/v1nch3r/modem-support/releases/download/21.02.5-generic/luci-app-atinout-mod_1.3.2-20220315_all.ipk"
atinout="https://github.com/v1nch3r/modem-support/releases/download/21.02.5-x86_64/atinout_0.9.1_x86_64.ipk"
luci_app_modemband="https://github.com/v1nch3r/modem-support/releases/download/21.02.5-generic/luci-app-modemband_1.0.17-20230223_all.ipk"
modemband="https://github.com/v1nch3r/modem-support/releases/download/21.02.5-generic/modemband_20230302_all.ipk"
xmm_modem="https://github.com/v1nch3r/modem-support/releases/download/21.02.5-generic/xmm-modem_0.0.1-4_all.ipk"
luci_app_ccleaner="https://github.com/v1nch3r/openwrt-packages/releases/download/generic/luci-app-ccleaner_1.0_all.ipk"
luci_app_temp_status="https://github.com/v1nch3r/openwrt-packages/releases/download/generic/luci-app-temp-status_0.3-6_all.ipk"
luci_app_ethernet_status="https://github.com/v1nch3r/openwrt-packages/releases/download/generic/luci-app-ethernet-status_1.0_all.ipk"

# config package
unused_packages="-dnsmasq"
driver_packages="usb-modeswitch xmm-modem chat comgt-ncm kmod-mii kmod-usb-wdm kmod-usb-serial kmod-usb-serial-option kmod-usb-serial-wwan kmod-usb-serial-qualcomm kmod-usb-acm kmod-usb-net kmod-usb-net-qmi-wwan kmod-usb-net-cdc-ncm kmod-usb-net-huawei-cdc-ncm kmod-usb-net-cdc-ether kmod-usb-net-rndis kmod-usb-net-cdc-mbim kmod-usb-net-rtl8150 kmod-usb-net-rtl8152"
openclash_iptables="coreutils-nohup bash iptables dnsmasq-full curl ca-certificates ipset ip-full iptables-mod-tproxy iptables-mod-extra libcap libcap-bin ruby ruby-yaml kmod-tun kmod-inet-diag unzip luci-compat luci luci-base"
wireless="ath9k-htc-firmware btrfs-progs hostapd hostapd-utils kmod-ath kmod-ath9k kmod-ath9k-common kmod-ath9k-htc  kmod-cfg80211 kmod-crypto-acompress kmod-crypto-crc32c kmod-crypto-hash kmod-fs-btrfs kmod-mac80211 wireless-tools wpa-cli wpa-supplicant"my_packages="${unused_packages} luci-theme-material luci-theme-argon luci-app-argon-config luci-app-temp-status luci-app-ethernet-status luci-app-ttyd luci-app-tinyfm luci-app-openclash luci-app-passwall2 luci-app-shutdown luci-app-netmon luci-app-zerotier luci-app-base64 luci-app-ccleaner luci-app-adguardhome luci-app-modeminfo luci-app-atinout-mod luci-app-vnstat2 luci-app-sqm luci-app-modemband sqm-scripts luci-proto-qmi luci-proto-modemmanager modemmanager qmi-utils uqmi umbim usbutils lsblk nano htop openssh-sftp-server ${driver_packages} ${openclash_iptables} ${wireless}"

error_msg() {
    echo -e "${ERROR} ${1}"
    exit 1
}

download_imagebuilder () {
    wget ${imagebuilder_repo} || error_msg
    tar -xJf openwrt-imagebuilder-* && rm -f openwrt-imagebuilder-*.tar.xz
    mv -f openwrt-imagebuilder-* ${openwrt_dir}
    sed -i "s|CONFIG_TARGET_ROOTFS_PARTSIZE=104|CONFIG_TARGET_ROOTFS_PARTSIZE=800|g" ${imagebuilder_path}/.config || error_msg
}

custom_packages () {
    wget -P ${imagebuilder_path}/packages/ ${luci_app_openclash} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_netmon} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_shutdown} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_tinyfm} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_base64} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_adguardhome} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_zerotier} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_theme_argon} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_argon_config} || error_msg
 #   wget -P ${imagebuilder_path}/packages/ ${luci_app_3ginfo_lite} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${sms_tool} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_modeminfo} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${modeminfo} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_atinout_mod} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${atinout} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_modemband} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${modemband} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_ccleaner} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_temp_status} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${luci_app_ethernet_status} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${xmm_modem} || error_msg
    wget -P ${imagebuilder_path}/packages/ ${kmod_inet_diag} || error_msg
    svn co ${luci_app_passwall2} ${imagebuilder_path}/packages/ || error_msg
}

adjustment_rootfs () {
    mkdir -p ${imagebuilder_path}/files/etc/uci-defaults/
    cp -f ${make_path}/uci-defaults/* ${imagebuilder_path}/files/etc/uci-defaults/
    mkdir -p ${imagebuilder_path}/files/bin/
    wget -P ${make_path}/ ${speedtest_repo} || error_msg
    tar -xzvf ${make_path}/*.tgz -C ${imagebuilder_path}/files/bin/
    rm -f ${make_path}/*.tgz && rm -f ${imagebuilder_path}/files/bin/speedtest.*
}

adding_clash_core () {
    mkdir -p ${imagebuilder_path}/files/etc/openclash/core/
    cd ${imagebuilder_path}/files/etc/openclash/core/
    wget ${clash} && gunzip *.gz || error_msg
    mv -f clash-* clash && rm -f *.gz
    wget ${clash_tun} && gunzip *.gz || error_msg
    mv -f clash-* clash_tun && rm -f *.gz
    wget ${clash_meta} && gunzip *.gz || error_msg
    mv -f Clash.* clash_meta && rm -f *.gz
}

build_firmware () {
    cd ${imagebuilder_path}
    make image PROFILE="generic" PACKAGES="${my_packages}" FILES="files" || error_msg
    echo "success..."
}

download_imagebuilder
custom_packages
adjustment_rootfs
adding_clash_core
build_firmware

exit 0
